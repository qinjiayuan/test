{
  "uid" : "9ea6f4423192abe4",
  "name" : "test_buy_now",
  "fullName" : "testcase.buyer.test_001_buy_now.TestBuyNowApi#test_buy_now",
  "historyId" : "72645c0e6d94777cecef2a56e72265b7",
  "time" : {
    "start" : 1740226743981,
    "stop" : 1740226744233,
    "duration" : 252
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntestcase\\buyer\\test_001_buy_now.py:17: AssumptionFailure\n>>\tpytest.assume(resp.status_code==200,f\"期望值：200，实际值：{resp.status_code}\")\nAssertionError: 期望值：200，实际值：403\nassert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               testcase\\buyer\\test_001_buy_now.py:17: AssumptionFailure\nE               >>\tpytest.assume(resp.status_code==200,f\"期望值：200，实际值：{resp.status_code}\")\nE               AssertionError: 期望值：200，实际值：403\nE               assert False\n\n.venv\\lib\\site-packages\\six.py:718: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase.buyer"
  }, {
    "name" : "suite",
    "value" : "test_001_buy_now"
  }, {
    "name" : "subSuite",
    "value" : "TestBuyNowApi"
  }, {
    "name" : "host",
    "value" : "DESKTOP-V34DU0O"
  }, {
    "name" : "thread",
    "value" : "51056-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.buyer.test_001_buy_now"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "6f1c133cdc55e382",
      "status" : "failed",
      "statusDetails" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntestcase\\buyer\\test_001_buy_now.py:17: AssumptionFailure\n>>\tpytest.assume(resp.status_code==200,f\"期望值：200，实际值：{resp.status_code}\")\nAssertionError: 期望值：200，实际值：403\nassert False",
      "time" : {
        "start" : 1740226440503,
        "stop" : 1740226440747,
        "duration" : 244
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9ea6f4423192abe4.json",
  "parameterValues" : [ ]
}